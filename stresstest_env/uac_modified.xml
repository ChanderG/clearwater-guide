<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE scenario SYSTEM "sipp.dtd">

<!-- This program is free software; you can redistribute it and/or      -->
<!-- modify it under the terms of the GNU General Public License as     -->
<!-- published by the Free Software Foundation; either version 2 of the -->
<!-- License, or (at your option) any later version.                    -->
<!--                                                                    -->
<!-- This program is distributed in the hope that it will be useful,    -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of     -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      -->
<!-- GNU General Public License for more details.                       -->
<!--                                                                    -->
<!-- You should have received a copy of the GNU General Public License  -->
<!-- along with this program; if not, write to the                      -->
<!-- Free Software Foundation, Inc.,                                    -->
<!-- 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA             -->
<!--                                                                    -->
<!--                 Sipp default 'uac' scenario.                       -->
<!--                                                                    -->

<scenario name="Basic Sipstone UAC">
  <!-- In client mode (sipp placing calls), the Call-ID MUST be         -->
  <!-- generated by sipp. To do so, use [call_id] keyword.                -->

	<!-- C1. Initial variable declarations copied as-is from sip-stress. -->
  <User variables="my_dn,peer_dn,call_repeat" />
  <nop hide="true">
    <action>
      <!-- Get my and peer's DN -->
      <assignstr assign_to="my_dn" value="[field0]" />
      <!-- field1 is my_auth, but we can't store it in a variable -->
      <assignstr assign_to="peer_dn" value="[field2]" />
      <!-- field3 is peer_auth, but we can't store it in a variable -->
      <assign assign_to="reg_repeat" value="0"/>
      <assign assign_to="call_repeat" value="0"/>
      <!-- Change these values to tweak the traffic profile. There have to be
           more registers than calls in the profile:
             - reg_pause   : How long you want to wait between registers - for
                             registers every 5 minutes set this to 300000
             - call_length : How long a call should be
             - call_delay  : What time period to spread out when calls start.
                             This is the reg_pause time minus the call_length
                             and call_answer time.
           You'll also potentially want to change some other values - these
           are commented inline by CHANGES. -->
      <!-- <assign assign_to="reg_pause" value="300000"/> -->
      <!-- <assign assign_to="call_delay" value="270000"/> -->
      <assign assign_to="call_length" value="2000"/>
      <assign assign_to="call_answer" value="1000"/>
    </action>
  </nop>
	<!-- END C1 -->

  <!-- C3. Generate some randomness between the request to reduce load on Bono.  -->
  <pause distribution="uniform" min="0" max="30000" />

  <!-- C2. Register, with re-attempt on auth failure, to get the nat_ip_addr etc. -->
  <send start_rtd="RRD">
    <![CDATA[

      REGISTER sip:[$my_dn]@[service] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];rport;branch=[branch]-[$my_dn]-[$reg_repeat]
      Route: <sip:[service];transport=[transport];lr>
      Max-Forwards: 70
      From: <sip:[$my_dn]@[service]>;tag=[pid]SIPpTag00[call_number]
      To: <sip:[$my_dn]@[service]>
      Call-ID: [$my_dn]///[call_id]
      CSeq: [cseq] REGISTER
      User-Agent: Accession 4.0.0.0
      Supported: outbound, path
      Contact: <sip:[$my_dn]@[local_ip]:[local_port];transport=[transport];ob>;+sip.ice;reg-id=1;+sip.instance="<urn:uuid:00000000-0000-0000-0000-000000000001>"
      Expires: 3600
      Allow: PRACK, INVITE, ACK, BYE, CANCEL, UPDATE, SUBSCRIBE, NOTIFY, REFER, MESSAGE, OPTIONS
      Content-Length: 0

    ]]>
  </send>

  <recv response="401" auth="true">
    <action>
      <add assign_to="reg_repeat" value="1" />
    </action>
  </recv>

  <send>
    <![CDATA[

      REGISTER sip:[$my_dn]@[service] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];rport;branch=[branch]-[$my_dn]-[$reg_repeat]
      Route: <sip:[service];transport=[transport];lr>
      Max-Forwards: 70
      From: <sip:[$my_dn]@[service]>;tag=[pid]SIPpTag00[call_number]
      To: <sip:[$my_dn]@[service]>
      Call-ID: [$my_dn]///[call_id]
      CSeq: [cseq] REGISTER
      User-Agent: Accession 4.0.0.0
      Supported: outbound, path
      Contact: <sip:[$my_dn]@[local_ip]:[local_port];transport=[transport];ob>;+sip.ice;reg-id=1;+sip.instance="<urn:uuid:00000000-0000-0000-0000-000000000001>"
      Expires: 3600
      [field1]
      Allow: PRACK, INVITE, ACK, BYE, CANCEL, UPDATE, SUBSCRIBE, NOTIFY, REFER, MESSAGE, OPTIONS
      Content-Length: 0

    ]]>
  </send>

  <recv response="200" rtd="RRD">
    <action>
      <ereg regexp="rport=([^;]*);.*received=([^;]*);" search_in="hdr" header="Via:" assign_to="dummy,nat_port,nat_ip_addr" />
      <add assign_to="reg_repeat" value="1" />
    </action>
  </recv>
  <Reference variables="dummy" />
	<!-- END C2 -->

	<!-- C4. Register the callee. -->
  <send>
    <![CDATA[

      REGISTER sip:[$peer_dn]@[service] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];rport;branch=[branch]-[$peer_dn]-[$reg_repeat]
      Route: <sip:[service];transport=[transport];lr>
      Max-Forwards: 70
      From: <sip:[$peer_dn]@[service]>;tag=[pid]SIPpTag00[call_number]
      To: <sip:[$peer_dn]@[service]>
      Call-ID: [$peer_dn]///[call_id]
      CSeq: [cseq] REGISTER
      User-Agent: Accession 4.0.0.0
      Supported: outbound, path
      Contact: <sip:[$peer_dn]@[local_ip]:[local_port];transport=[transport];ob>;+sip.ice;reg-id=1;+sip.instance="<urn:uuid:00000000-0000-0000-0000-000000000001>"
      Expires: 3600
      Allow: PRACK, INVITE, ACK, BYE, CANCEL, UPDATE, SUBSCRIBE, NOTIFY, REFER, MESSAGE, OPTIONS
      Content-Length: 0

    ]]>
  </send>

  <recv response="401" auth="true">
    <action>
      <add assign_to="reg_repeat" value="1" />
    </action>
  </recv>

  <send>
    <![CDATA[

      REGISTER sip:[$peer_dn]@[service] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];rport;branch=[branch]-[$peer_dn]-[$reg_repeat]
      Route: <sip:[service];transport=[transport];lr>
      Max-Forwards: 70
      From: <sip:[$peer_dn]@[service]>;tag=[pid]SIPpTag00[call_number]
      To: <sip:[$peer_dn]@[service]>
      Call-ID: [$peer_dn]///[call_id]
      CSeq: [cseq] REGISTER
      User-Agent: Accession 4.0.0.0
      Supported: outbound, path
      Contact: <sip:[$peer_dn]@[local_ip]:[local_port];transport=[transport];ob>;+sip.ice;reg-id=1;+sip.instance="<urn:uuid:00000000-0000-0000-0000-000000000001>"
      Expires: 3600
      [field3]
      Allow: PRACK, INVITE, ACK, BYE, CANCEL, UPDATE, SUBSCRIBE, NOTIFY, REFER, MESSAGE, OPTIONS
      Content-Length: 0

    ]]>
  </send>

  <recv response="200">
    <action>
      <add assign_to="reg_repeat" value="1" />
    </action>
  </recv>
	<!-- END C4. -->

  <send retrans="500" start_rtd="SRD">
    <![CDATA[

      INVITE sip:[$peer_dn]@[service] SIP/2.0
      Via: SIP/2.0/[transport] [$nat_ip_addr]:[$nat_port];rport;branch=z9hG4bK-[$my_dn]-[call_number]-[$call_repeat]-1
      From: sip:[$my_dn]@[service];tag=[pid]SIPpTag00[call_number]1234
      To: sip:[$peer_dn]@[service]
      Contact: <sip:[$my_dn]@[$nat_ip_addr]:[$nat_port];transport=[transport];ob>;+sip.ice
      Call-ID: [$my_dn]-[$call_repeat]///[call_id]
      CSeq: [cseq] INVITE
      Max-Forwards: 70
      Subject: Performance Test
      Content-Type: application/sdp
      Content-Length: [len]

      v=0
      o=user1 53655765 2353687637 IN IP[local_ip_type] [local_ip]
      s=-
      c=IN IP[media_ip_type] [media_ip]
      t=0 0
      m=audio [media_port] RTP/AVP 0
      a=rtpmap:0 PCMU/8000

    ]]>
  </send>

  <recv response="100" optional="true" next="3">
  </recv>

  <recv request="INVITE">
  </recv>

  <nop hide="true">
    <action>
      <assignstr assign_to="uas_via" value="[last_Via:]" />
      <assignstr assign_to="uas_rr" value="[last_Record-Route:]" />
    </action>
  </nop>

  <recv response="100" next="4">
  </recv>

  <recv request="ACK" optional="true">
  </recv>

  <label id="3" />

  <recv request="INVITE">
  </recv>

  <nop hide="true">
    <action>
      <assignstr assign_to="uas_via" value="[last_Via:]" />
      <assignstr assign_to="uas_rr" value="[last_Record-Route:]" />
    </action>
  </nop>

  <label id="4" />

  <send>
    <![CDATA[

      SIP/2.0 100 Trying
      [$uas_via]
      [$uas_rr]
      Call-ID: [$my_dn]-[$call_repeat]///[call_id]
      From: <sip:[$peer_dn]@[service]>;tag=[pid]SIPpTag00[call_number]1234
      To: <sip:[$my_dn]@[service]>
      [last_CSeq:]
      Content-Length: 0

    ]]>
  </send>

  <send>
    <![CDATA[

      SIP/2.0 180 Ringing
      [$uas_via]
      [$uas_rr]
      Call-ID: [$my_dn]-[$call_repeat]///[call_id]
      From: <sip:[$peer_dn]@[service]>;tag=[pid]SIPpTag00[call_number]1234
      To: <sip:[$my_dn]@[service]>;tag=[pid]SIPpTag00[call_number]4321
      [last_CSeq:]
      Contact: <sip:[$peer_dn]@[$nat_ip_addr]:[$nat_port];transport=[transport];ob>;+sip.ice
      Allow: PRACK, INVITE, ACK, BYE, CANCEL, UPDATE, SUBSCRIBE, NOTIFY, REFER, MESSAGE, OPTIONS
      Content-Length: 0

    ]]>
  </send>

  <recv response="180" rtd="SRD">
  </recv>

  <!-- <recv response="183" optional="true"> -->
  <!-- </recv> -->

  <pause variable="call_answer" />

  <send>
    <![CDATA[

      SIP/2.0 200 OK
      [$uas_via]
      [last_Record-Route:]
      Call-ID: [$my_dn]-[$call_repeat]///[call_id]
      From: <sip:[$peer_dn]@[service]>;tag=[pid]SIPpTag00[call_number]1234
      To: <sip:[$my_dn]@[service]>;tag=[pid]SIPpTag00[call_number]4321
      [last_CSeq:]
      Allow: PRACK, INVITE, ACK, BYE, CANCEL, UPDATE, SUBSCRIBE, NOTIFY, REFER, MESSAGE, OPTIONS
      Contact: <sip:[$peer_dn]@[$nat_ip_addr]:[$nat_port];transport=[transport];ob>;+sip.ice
      Supported: replaces, 100rel, timer, norefersub
      Session-Expires: 1800;refresher=uac
      Content-Type: application/sdp
      Content-Length: 948

      v=0
      o=- 3547439528 3547439529 IN IP4 23.23.222.251
      s=pjmedia
      c=IN IP4 23.23.222.251
      b=AS:84
      t=0 0
      a=X-nat:3
      m=audio 59808 RTP/AVP 120 96
      c=IN IP4 23.23.222.251
      b=TIAS:64000
      a=rtcp:36110 IN IP4 23.23.222.251
      a=sendrecv
      a=rtpmap:120 SILK/8000
      a=fmtp:120 maxaveragebitrate=64000;useinbandfec=1;usedtx=1
      a=rtpmap:96 telephone-event/8000
      a=fmtp:96 0-15
      a=ice-ufrag:32ffb0d4
      a=ice-pwd:6b7c406b
      a=candidate:Sac123cc4 1 UDP 1694498815 192.91.191.29 57173 typ srflx raddr 172.18.60.196 rport 57931
      a=candidate:Hac123cc4 1 UDP 2130706431 172.18.60.196 57931 typ host
      a=candidate:R1717defb 1 UDP 16777215 23.23.222.251 59808 typ relay raddr 192.91.191.29 rport 62536
      a=candidate:Sac123cc4 2 UDP 1694498814 192.91.191.29 60865 typ srflx raddr 172.18.60.196 rport 59842
      a=candidate:Hac123cc4 2 UDP 2130706430 172.18.60.196 59842 typ host
      a=candidate:R1717defb 2 UDP 16777214 23.23.222.251 36110 typ relay raddr 192.91.191.29 rport 57129

    ]]>
  </send>

  <!-- By adding rrs="true" (Record Route Sets), the route sets         -->
  <!-- are saved and used for following messages sent. Useful to test   -->
  <!-- against stateful SIP proxies/B2BUAs.                             -->
  <recv response="200" rrs="true">
  </recv>


  <!-- Disable this ACK back and forth. Causes timeout in a certain subset.

  <send>
    <![CDATA[

      ACK sip:[$peer_dn]@[$nat_ip_addr]:[$nat_port];transport=[transport];ob SIP/2.0
      Via: SIP/2.0/[transport] [$nat_ip_addr]:[$nat_port];rport;branch=z9hG4bK-[$my_dn]-[call_number]-[$call_repeat]-1
      [routes]
      Max-Forwards: 70
      From: sip:[$my_dn]@[service];tag=[pid]SIPpTag00[call_number]1234
      To: sip:[$peer_dn]@[service];tag=[pid]SIPpTag00[call_number]4321
      Call-ID: [$my_dn]-[$call_repeat]///[call_id]
      CSeq: [cseq] ACK
      Content-Length: 0

    ]]>
  </send>

  <recv request="ACK">
  </recv>

  -->

  <pause variable="call_length" />

  <!-- Packet lost can be simulated in any send/recv message by         -->
  <!-- by adding the 'lost = "10"'. Value can be [1-100] percent.       -->

  <!-- This delay can be customized by the -d command-line option       -->
  <!-- or by adding a 'milliseconds = "value"' option here.             -->
  <!-- <pause/> -->

  <send start_rtd="teardown">
    <![CDATA[

      BYE sip:[$peer_dn]@[$nat_ip_addr]:[$nat_port];transport=[transport];ob SIP/2.0
      Via: SIP/2.0/[transport] [$nat_ip_addr]:[$nat_port];rport;branch=z9hG4bK-[$my_dn]-[call_number]-[$call_repeat]-3
      [routes]
      From: <sip:[$my_dn]@[service]>;tag=[pid]SIPpTag00[call_number]1234
      To: <sip:[$peer_dn]@[service]>;tag=[pid]SIPpTag00[call_number]4321
      Call-ID: [$my_dn]-[$call_repeat]///[call_id]
      CSeq: [cseq] BYE
      Contact: <sip:[$my_dn]@[$nat_ip_addr][$nat_port];transport=[transport];ob>;+sip.ice
      Max-Forwards: 70
      Subject: Performance Test
      Content-Length: 0

    ]]>
  </send>

  <recv request="BYE">
  </recv>

  <send>
    <![CDATA[

      SIP/2.0 200 OK
      [last_Via:]
      [last_Record-Route:]
      From: sip:[$peer_dn]@[service];tag=[pid]SIPpTag00[call_number]1234
      To: sip:[$my_dn]@[service];tag=[pid]SIPpTag00[call_number]4321
      Call-ID: [$my_dn]-[$call_repeat]///[call_id]
      [last_CSeq:]
      Contact: <sip:[$peer_dn]@[$nat_ip_addr][$nat_port];transport=[transport];ob>;+sip.ice
      Content-Length: 0

    ]]>
  </send>

  <!-- The 'crlf' option inserts a blank line in the statistics report. -->
  <recv response="200" crlf="true" rtd="teardown">
  </recv>

  <!-- definition of the response time repartition table (unit is ms)   -->
  <ResponseTimeRepartition value="10, 20, 30, 40, 50, 100, 150, 200"/>

  <!-- definition of the call length repartition table (unit is ms)     -->
  <CallLengthRepartition value="10, 50, 100, 500, 1000, 5000, 10000"/>

</scenario>
